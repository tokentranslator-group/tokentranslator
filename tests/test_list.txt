### Main tokentranslator tests:

# new equation translator test:
# (mostly for wolfram)
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.env.equation_net.tests as ts;ts.run()"

# old equation translator test (deprecated):
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.env.equation.tests as ts;ts.run()"

# system of equations tests:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.env.system.tests_sys as ts;ts.run()"

# clauses tests:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.env.clause.tests as ts;ts.run()"

==================================================
### Main tokentranslator tests:
# for changing eqs dialect to tex:
python3 -c "import tokentranslator.db_models.model_main as dbm; dbm.change_eqs('tex')"

# to wolfram:
python3 -c "import tokentranslator.db_models.model_main as dbm; dbm.change_eqs('wolfram')"
===================================================

### tokentranslator components tests:

# lex and cyk tests:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.grammar.tests_cyk as ts;ts.run()"
# tree and map tests:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.tree.tests_map as ts;ts.run()"

v# parser general test:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.main.test_parser_general as ts;ts.run()"

=================================
### tokenizer tests

# main tokenizer  tests:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.tokenizer.tests.tests_tokenizer_main as ts;ts.run()"

# patterns sorting tests:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.tokenizer.patterns.patterns_listtests.tests_patterns_list as ts;ts.run()"

# patterns types tests:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.tokenizer.patterns.patterns_types.tests.tests_pattern_re as ts;ts.run()"

~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.tokenizer.patterns.patterns_types.tests.tests_pattern_txt as ts;ts.run()"

~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.tokenizer.patterns.patterns_types.tests.tests_pattern_ex as ts;ts.run()"

=====================================

### Test sampling:

# main sampling tests:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.sampling.slambda.tests_slambda_main as ts;ts.run()"

# sampling components tests:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.sampling.slambda.tests_slambda_synch as ts;ts.run()"

~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.sampling.slambda.tests_tree_editor as ts;ts.run()"

~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.translator.sampling.slambda.tests_slambda_single as ts;ts.run()"

========================================

### Test model:
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.gui.web.model.model_main as ts;ts.run()"
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.gui.web.model.model_signatures as ts;ts.run()"
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.gui.web.model.model_examples as ts;ts.run()"
~/anaconda3/envs/etokentranslator/bin/./python3 -c "import tokentranslator.gui.web.model.model_stable as ts;ts.run()"



=======================================

# see also: tokentranslator/translator/tokenizer/tests/tests_list.py
